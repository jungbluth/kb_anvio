/*
A KBase module: kb_anvio
*/

module kb_anvio {

    /* A boolean - 0 for false, 1 for true.
        @range (0, 1)
    */
    typedef int boolean;

    /* An X/Y/Z style reference
    */
    typedef string obj_ref;

    /*
        required params:
        assembly_ref: Genome assembly object reference
        workspace_name: the name of the workspace it gets saved to.

        optional params:
        reads_list: list of reads object (PairedEndLibrary/SingleEndLibrary) upon which Anvio will be run
        read_mapping_tool: read mapping tool to use
        min_contig_length: minimum contig length; default 1000bp
        contig_split_size: length to split long contigs; default 10000bp
        kmer_size: size of kmers
        trna_run: size of kmers
        ref: https://github.com/merenlab/anvio

    */
    typedef structure {
        obj_ref assembly_ref;
        string workspace_name;

        list<obj_ref> reads_list;
        string read_mapping_tool;
        int min_contig_length;
        int contig_split_size;
        int kmer_size;
        string trna_run;

    } AnvioInputParams;

    /*
        result_directory: folder path that holds all files generated by run_kb_anvio
        report_name: report name generated by KBaseReport
        report_ref: report reference generated by KBaseReport
    */
    typedef structure{
        string result_directory;
        string report_name;
        string report_ref;
    }AnvioResult;

    funcdef run_kb_anvio(AnvioInputParams params)
        returns (AnvioResult returnVal) authentication required;

};
